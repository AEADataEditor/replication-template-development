#  Template python-build

#  This template allows you to validate your python code.
#  The workflow allows running tests and code linting on the default branch.


pipelines:
  custom:
    populate-from-icpsr: #name of this pipeline
      - variables:          #list variable names under here
          # These do not need to have a value, if "config.yml" is filled out.
          - name: openICPSRID   
          - name: ZenodoID
          - name: DataverseID
          - name: OSFID
          - name: SkipProcessing
            default: "no"
            allowed-values:
              - "no"
              - "yes"
      - step:
          name: Download
          image: python:3.8
          artifacts:
            - aux/*
            - cache/*
          caches:
            - pip
          script:
            - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - if [ -d $openICPSRID ]; then \rm -rf $openICPSRID; fi
            - if [ -f tools/download_openicpsr-private.py ]; then python3 tools/download_openicpsr-private.py $openICPSRID; fi
            - mkdir cache
            - mv *.zip cache/
            - chmod a+rx ./automations/*.sh
            - ./automations/01_prepare_aux.sh
            - ./automations/02_list_data_files.sh
            - ./automations/03_list_program_files.sh
            - ls -lR
      - step:
          name: Run Stata parser and PII scanner
          image:
            name: larsvilhuber/bitbucket-stata:latest
            username: $W_DOCKER_USERNAME
            password: $W_DOCKER_PAT
          script:
            - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - chmod a+rx ./automations/*.sh
            - ./automations/05_run_stata_scanner.sh
          artifacts:
            - aux/*
            - cache/*
      - step:
          name: Run Rds parser
          image: aeadataeditor/verification-r:latest
          script:
            - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - chmod a+rx ./automations/*.sh
            - ./automations/04_run_rds_scanner.sh
          artifacts:
            - aux/*
            - cache/*
      - step:
          image: python:3.8
          name: Add info to REPLICATION.md
          script:
            - python3 tools/replace_placeholders.py --indir aux --outfile aux/REPLICATION-filled.md
          artifacts:
            - aux/*
            - cache/*
      - step: 
          name: Commit everything back
          script:
            - ls -l cache/* aux/*
            - if [ -f cache/*.zip ]; then mv cache/*zip .; fi
            - chmod a+rx ./automations/*.sh
            - ./automations/00_unpack_zip.sh
            - ./automations/06_commit_code.sh $openICPSRID
            - ./automations/07_cleanup.sh $openICPSRID
            - if [ -f aux/REPLICATION-filled.md ]; then mv aux/REPLICATION-filled.md REPLICATION.md; fi
            - git add REPLICATION.md
            - if [ ! -d generated ]; then mkdir generated; fi
            - cp aux/* generated/
            - git add -f generated/*
            - git status
            - git commit -m '[skip ci] Analysis of author provided files'
            - git push
    refresh-tools: #name of this pipeline
      - step:
          name: Refresh the tools in this repository
          script:
            - wget https://raw.githubusercontent.com/AEADataEditor/replication-template/master/tools/update_tools.sh
            - chmod a+rx update_tools.sh
            - ./update_tools.sh
            - git push