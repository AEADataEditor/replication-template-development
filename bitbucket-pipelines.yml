#  Template python-build

#  This template allows you to validate your python code.
#  The workflow allows running tests and code linting on the default branch.


pipelines:
  custom:
    populate-from-icpsr: #name of this pipeline
      - variables:          #list variable names under here
          # These do not need to have a value, if "config.yml" is filled out.
          - name: openICPSRID   
          - name: ZenodoID
          - name: DataverseID
          - name: OSFID
          - name: ProcessStata
            default: "yes"
            allowed-values:
              - "no"
              - "yes"
          - name: ProcessR
            default: "no"
            allowed-values:
              - "no"
              - "yes"
          - name: SkipProcessing
            default: "no"
            allowed-values:
              - "no"
              - "yes"
      - step:
          name: Download
          image: python:3.8
          artifacts:
            - aux/**
            - cache/**
          caches:
            - pip
          script:
            - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - if [ -d $openICPSRID ]; then \rm -rf $openICPSRID; fi
            - if [ -f tools/download_openicpsr-private.py ]; then python3 tools/download_openicpsr-private.py $openICPSRID; fi
            - mkdir cache
            - mv *.zip cache/
            - chmod a+rx ./automations/*.sh
            - ./automations/01_prepare_aux.sh
            - ./automations/02_list_data_files.sh $openICPSRID
            - ./automations/03_list_program_files.sh $openICPSRID
            - ls -lR
      - parallel: # we will run these in parallel
        - step:
            name: Run Stata parser and PII scanner
            image:
              name: larsvilhuber/bitbucket-stata:latest
              username: $W_DOCKER_USERNAME
              password: $W_DOCKER_PAT
            script:
              - if [ -d cache ]; then ls -lR cache/*; fi
              - if [ -f cache/$openICPSRID.zip ]; then mv cache/$openICPSRID.zip .; fi
              - chmod a+rx ./automations/*.sh
              - ./automations/05_run_stata_scanner.sh $openICPSRID
            artifacts:
              - aux/**
        - step:
            name: Run Rds parser
            image: aeadataeditor/verification-r:latest
            script:
              - if [ -d cache ]; then ls -lR cache/*; fi
              - if [ -f cache/$openICPSRID.zip ]; then mv cache/$openICPSRID.zip .; fi
              - chmod a+rx ./automations/*.sh
              - ./automations/04_run_rds_scanner.sh
            artifacts:
              - aux/**
      ## collect all information
      - step:
          image: python:3.8
          name: Add info to REPLICATION.md
          script:
            - chmod a+rx ./automations/*.sh
            - ./automations/20_amend_report.sh
          artifacts:
            - aux/**
      - step: 
          image: python:3.8
          # This will re-download it again, but only if it's not in cache.
          name: Commit everything back
          script:
            - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - if [ -d cache ]; then ls -lR cache/*; fi
            - ls -l aux/*
            - if [ -f cache/$openICPSRID.zip ]; then mv cache/$openICPSRID.zip .; fi
            - if [ -d $openICPSRID ]; then \rm -rf $openICPSRID; fi
            - if [ ! -f $openICPSRID.zip ]; then python3 tools/download_openicpsr-private.py $openICPSRID; fi
            - chmod a+rx ./automations/*.sh
            - ./automations/00_unpack_zip.sh  $openICPSRID
            - ./automations/06_commit_code.sh $openICPSRID
            - ./automations/07_cleanup.sh     $openICPSRID
            - ./automations/21_replace_report.sh
            - ./automations/30_cleanup_aux.sh
            - git status
            - git push 
            - git push --tags 
    refresh-tools: #name of this pipeline
      - step:
          name: Refresh the tools in this repository
          script:
            - wget https://raw.githubusercontent.com/AEADataEditor/replication-template/master/tools/update_tools.sh
            - chmod a+rx update_tools.sh
            - ./update_tools.sh
            - git push
    run-stata: # name of this pipeline
      - variables:          #list variable names under here
          # These do not need to have a value, if "config.yml" is filled out.
          - name: openICPSRID   
          - name: ZenodoID
          - name: DataverseID
          - name: OSFID
          - name: ExtraData
            default: "URL - not used yet"
          - name: RunCommand
            default: "run.sh"
      - step:
            name: Run Stata code
            size: 2x
            image:
              name: larsvilhuber/bitbucket-stata:latest
              username: $W_DOCKER_USERNAME
              password: $W_DOCKER_PAT
            artifacts:
              - 1**/**
            script:
              - if [ -f tools/download_openicpsr-private.py ]; then python3 tools/download_openicpsr-private.py $openICPSRID; fi
              - chmod a+rx ./automations/*.sh
              - ./automations/00_unpack_zip.sh  $openICPSRID
              - dir=$(find $openICPSRID -name "$RunCommand")
              - cd $(dirname $dir)
              - bash -x "$RunCommand"
              - cd -
              - ./automations/06_commit_code.sh $openICPSRID run
              - ./automations/11_check_statalog.sh $openICPSRID
              - git status
              - git push