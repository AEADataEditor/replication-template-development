# Create list of all RDS files in directory
datafiles_list <- list()
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(pattern = ".rds")
listRds <- dlist.files(pattern = ".Rds")
listRDS <- list.files(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export results as Excel if xlsx package installed; if not, export as comma-separated .txt file
t <- try(library(xlsx))
if ("try-error" %in% class(t)) {
write.table(df, file = here(basename), sep = ",", quote = FALSE, row.names = FALSE)
} else{
write.xlsx(df, file = here("r-data-checks.xlsx"), sheetName = "Output", append = FALSE)
}
root
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(pattern = ".rds")
listRds <- list.files(pattern = ".Rds")
listRDS <- list.files(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export results as Excel if xlsx package installed; if not, export as comma-separated .txt file
t <- try(library(xlsx))
if ("try-error" %in% class(t)) {
write.table(df, file = here(basename), sep = ",", quote = FALSE, row.names = FALSE)
} else{
write.xlsx(df, file = here("r-data-checks.xlsx"), sheetName = "Output", append = FALSE)
}
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(pattern = ".rds")
listRds <- list.files(pattern = ".Rds")
listRDS <- list.files(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(pattern = ".rds", recursive = TRUE)
listRds <- dlist.files(pattern = ".Rds", recursive = TRUE)
listRDS <- list.files(pattern = ".RDS", recursive = TRUE)
listrds <- list.files(pattern = ".rds", recursive = TRUE)
listRds <- list.files(pattern = ".Rds", recursive = TRUE)
listRDS <- list.files(pattern = ".RDS", recursive = TRUE)
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(pattern = ".rds", recursive = TRUE)
listRds <- list.files(pattern = ".Rds", recursive = TRUE)
listRDS <- list.files(pattern = ".RDS", recursive = TRUE)
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
datafiles_list
listrds <- list.files(pattern = ".rds", recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
listrds
listrds <- list.files(pattern = ".rds", recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
listrds
listrds <- list.files(pattern = ".rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = TRUE)
listrds
listrds <- list.files(pattern = ".rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
listrds
listrds <- list.files(pattern = "rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
listrds
# Finds current directory
root <- here()
root
listrds <- list.files(path = root, pattern = ".rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
listrds
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(path = root, pattern = "*.rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
listrds
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(path = root, pattern = ".rds^", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
listrds
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(path = root, pattern = ".rds*", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
listrds
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- list.files(path = root, pattern = ".rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
listrds
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Create list of all RDS files in directory
datafiles_list <- list.files(path = root, pattern = ".rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export results as Excel if xlsx package installed; if not, export as comma-separated .txt file
t <- try(library(xlsx))
if ("try-error" %in% class(t)) {
write.table(df, file = here(basename), sep = ",", quote = FALSE, row.names = FALSE)
} else{
write.xlsx(df, file = here("r-data-checks.xlsx"), sheetName = "Output", append = FALSE)
}
df
dataFiles
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Create list of all RDS files in directory
datafiles_list <- list.files(path = root, pattern = ".rds", recursive = TRUE, ignore.case = TRUE, full.names = FALSE, include.dirs = FALSE)
# Loop to read all RDS files, recording successes as "yes"
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export results as Excel if xlsx package installed; if not, export as comma-separated .txt file
t <- try(library(xlsx))
if ("try-error" %in% class(t)) {
write.table(df, file = here(basename), sep = ",", quote = FALSE, row.names = FALSE)
} else{
write.xlsx(df, file = here("r-data-checks.xlsx"), sheetName = "Output", append = FALSE)
}
# Create list of all RDS files in directory
datafiles_list <- list.files(path = root, pattern = ".rds", full.names = FALSE, recursive = FALSE, ignore.case = TRUE, include.dirs = FALSE)
# Loop to read all RDS files, recording successes as "yes"
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
}
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(path = root, pattern = ".rds", full.names = FALSE, recursive = FALSE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(path = root, pattern = ".rds", full.names = FALSE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(path = root, pattern = ".rds", full.names = FALSE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(path = root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = FALSE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = FALSE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = "\*.rds", full.names = FALSE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = FALSE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Loop to read all RDS files, recording successes as "yes"
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
}
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
}
readRDS(datafiles_list[[1]])
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
read_success <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
read_success[[k]] <- "No"
} else{
read_success[[k]][2] <- "Yes"
}
}
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
datafiles_list
read_success <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
read_success[[k]] <- "No"
} else{
read_success[[k]] <- "Yes"
}
}
readRDS(datafiles_list[[1]])
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
read_success[[k]] <- "No"
} else{
read_success[[k]] <- "Yes"
}
}
read_success
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
df
df$col2 <- read_success
df
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Create list of all RDS files in directory
datafiles_list <- list.files(root, pattern = ".rds", full.names = TRUE, recursive = TRUE, ignore.case = TRUE, include.dirs = FALSE)
# Create list denoting successes/failures
read_success <- list()
# Loop to read all RDS files, recording successes as "yes"
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
read_success[[k]] <- "No"
} else{
read_success[[k]] <- "Yes"
}
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
df$col2 <- read_success
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export results as Excel if xlsx package installed; if not, export as comma-separated .txt file
t <- try(library(xlsx))
if ("try-error" %in% class(t)) {
write.table(df, file = here(basename), sep = ",", quote = FALSE, row.names = FALSE)
} else{
write.xlsx(df, file = here("r-data-checks.xlsx"), sheetName = "Output", append = FALSE)
}
