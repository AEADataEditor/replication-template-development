dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
# Create list of all RDS files in directory
datafiles_list <- list()
setwd(root)
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export list as Excel spreadsheet, will appear in AEAREP directory
setwd(root)
write.xlsx(df, file = "rdatareading.xlsx", sheetName = "Output", append = FALSE)
df
df
datafiles_list
setwd(root)
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
datafiles_list
for(k in 1:length(data_folder_list)){
setwd(data_folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
for(k in 1:length(folder_list)){
setwd(data_folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = "*.rds")
listRds <- dir(pattern = "*.Rds")
listRDS <- dir(pattern = "*.RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages
require(xlsx)
require("stringi")
require("here")
# Finds current directory
root <- here()
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
data_folder_list <- list()
# Find data/RDS folder(s)
for(k in 1:length(folder_list)){
if (grepl("data", folder_list[[k]], fixed = TRUE) || grepl("rds", folder_list[[k]], fixed = TRUE) || grepl("Data", folder_list[[k]], fixed = TRUE) || grepl("Rds", folder_list[[k]], fixed = TRUE) || grepl("RDS", folder_list[[k]], fixed = TRUE)) {
# If data/RDS folder exists, add it to new list
data_folder_list <- append(data_folder_list, folder_list[[k]])
}
}
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(data_folder_list)){
setwd(data_folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export list as Excel spreadsheet, will appear in AEAREP directory
setwd(root)
write.xlsx(df, file = "rdatareading.xlsx", sheetName = "Output", append = FALSE)
datafiles_list
require(tidyverse)
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages
require(xlsx)
require("stringi")
require("here")
require(tidyverse)
# Finds current directory
root <- here()
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
data_folder_list <- list()
# Find data/RDS folder(s)
for(k in 1:length(folder_list)){
if (grepl("data", folder_list[[k]], fixed = TRUE) || grepl("rds", folder_list[[k]], fixed = TRUE) || grepl("Data", folder_list[[k]], fixed = TRUE) || grepl("Rds", folder_list[[k]], fixed = TRUE) || grepl("RDS", folder_list[[k]], fixed = TRUE)) {
# If data/RDS folder exists, add it to new list
data_folder_list <- append(data_folder_list, folder_list[[k]])
}
}
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(data_folder_list)){
setwd(data_folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export list as Excel spreadsheet, will appear in AEAREP directory
setwd(root)
write.xlsx(df, file = "rdatareading.xlsx", sheetName = "Output", append = FALSE)
datafiles_list
# Finds current directory
root <- here()
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
data_folder_list <- list()
for(k in 1:length(folder_list)){
if (grepl("data", folder_list[[k]], fixed = TRUE) || grepl("rds", folder_list[[k]], fixed = TRUE) || grepl("Data", folder_list[[k]], fixed = TRUE) || grepl("Rds", folder_list[[k]], fixed = TRUE) || grepl("RDS", folder_list[[k]], fixed = TRUE)) {
# If data/RDS folder exists, add it to new list
data_folder_list <- append(data_folder_list, folder_list[[k]])
}
}
data_folder_list
folder_list
root
# Finds current directory
root <- here()
root
# Finds current directory
root <- here()
root
# Finds current directory
root <- here()
root
# Finds current directory
root <- here()
root
setwd("C:\Users\ironc\aearep\aearep-3090")
setwd("\Users\ironc\aearep\aearep-3090")
setwd("\ironc\aearep\aearep-3090")
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages
require(xlsx)
require("stringi")
require("here")
require(tidyverse)
# Finds current directory
root <- here()
setwd("\ironc\aearep\aearep-3090")
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
data_folder_list <- list()
# Find data/RDS folder(s)
for(k in 1:length(folder_list)){
if (grepl("data", folder_list[[k]], fixed = TRUE) || grepl("rds", folder_list[[k]], fixed = TRUE) || grepl("Data", folder_list[[k]], fixed = TRUE) || grepl("Rds", folder_list[[k]], fixed = TRUE) || grepl("RDS", folder_list[[k]], fixed = TRUE)) {
# If data/RDS folder exists, add it to new list
data_folder_list <- append(data_folder_list, folder_list[[k]])
}
}
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(data_folder_list)){
setwd(data_folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export list as Excel spreadsheet, will appear in AEAREP directory
setwd(root)
write.xlsx(df, file = "rdatareading.xlsx", sheetName = "Output", append = FALSE)
root
# Create list of all RDS files in directory
datafiles_list <- list()
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = "RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds*")
listRds <- dir(pattern = ".Rds*")
listRDS <- dir(pattern = "RDS*")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages
require("stringi")
require("here")
# Finds current directory
root <- here()
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
data_folder_list <- list()
# Find data/RDS folder(s)
for(k in 1:length(folder_list)){
if (grepl("data", folder_list[[k]], fixed = TRUE) || grepl("rds", folder_list[[k]], fixed = TRUE) || grepl("Data", folder_list[[k]], fixed = TRUE) || grepl("Rds", folder_list[[k]], fixed = TRUE) || grepl("RDS", folder_list[[k]], fixed = TRUE)) {
# If data/RDS folder exists, add it to new list
data_folder_list <- append(data_folder_list, folder_list[[k]])
}
}
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
datafiles_list
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages
require("stringi")
require("here")
# Finds current directory
root <- here()
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
data_folder_list <- list()
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
datafiles_list
# Export results as a table
write.table(df, file = basename, sep = " ", quote = FALSE, row.names = FALSE)
root
basename <- "r-data-checks.txt"
# Export results as a table
write.table(df, file = basename, sep = " ", quote = FALSE, row.names = FALSE)
# Export results as a table
setwd(root)
write.table(df, file = basename, sep = " ", quote = FALSE, row.names = FALSE)
write.table(df, file = here(basename), sep = " ", quote = FALSE, row.names = FALSE)
write.table(df, file = here(basename), sep = " ", quote = FALSE, row.names = FALSE)
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export results as a table
write.table(df, file = here(basename), sep = " ", quote = FALSE, row.names = FALSE)
# Running instructions: Run all the code at once, no manual changes needed.
# Import necessary packages, create basename
require("stringi")
require("here")
basename <- "r-data-checks.txt"
# Finds current directory
root <- here()
# Retrieve list of all folders
dir_list <- list.dirs(root)[-1]
folder_list <- gsub("\\./", "", dir_list)
folder_list
# Create list of all RDS files in directory
datafiles_list <- list()
for(k in 1:length(folder_list)){
setwd(folder_list[[k]])
listrds <- dir(pattern = ".rds")
listRds <- dir(pattern = ".Rds")
listRDS <- dir(pattern = ".RDS")
datafiles_list <- append(datafiles_list, listrds)
datafiles_list <- append(datafiles_list, listRds)
datafiles_list <- append(datafiles_list, listRDS)
}
datafiles_list
# Loop to read all RDS files, recording successes as "yes"
dataFiles <- list()
for(k in 1:length(datafiles_list)){
t <- try(readRDS(datafiles_list[[k]]))
if ("try-error" %in% class(t)){
datafiles_list[[k]][2] <- "No"
} else{
datafiles_list[[k]][2] <- "Yes"
}
dataFiles[[k]] <- ""
}
# Convert list into data frame
df <- data.frame(matrix(unlist(datafiles_list), nrow=length(datafiles_list), byrow=TRUE))
# Add column names to new data frame
colnames(df) <- c("File name", "Successfully read?")
# Export results as Excel if xlsx package installed; if not, export as comma-separated .txt file
t <- try(library(xlsx))
if ("try-error" %in% class(t)) {
write.table(df, file = here(basename), sep = ",", quote = FALSE, row.names = FALSE)
} else{
write.xlsx(df, file = here("r-data-checks.xlsx"), sheetName = "Output", append = FALSE)
}
